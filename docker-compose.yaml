name: backend

services:
  postgres:
    env_file: ./configs/postgres.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    image: postgres:17.2-alpine3.20
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 2s
      timeout: 2s
      retries: 8

  redis:
    environment:
     - REDIS_REPLICATION_MODE=master
    volumes:
      - ./configs/redis.conf:/usr/local/etc/redis/redis.conf
    image: redis:7.2-alpine3.20
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 2s
      timeout: 2s
      retries: 8

  minio:
    image: minio/minio:RELEASE.2024-11-07T00-52-20Z.fips
    env_file: configs/minio.env
#    # TODO: remove to not have access outside the compose network
#    ports:
#      - "9000:9000"
#      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

#  kafka:
#    image: docker.io/bitnami/kafka:3.9.0-debian-12-r3
#    # TODO: remove to not have access outside the compose network
#    ports:
#      - "9092:9092"
#    volumes:
#      - kafka_data:/bitnami
#    environment:
#      # KRaft settings
#      - KAFKA_CFG_NODE_ID=0
#      - KAFKA_CFG_PROCESS_ROLES=controller,broker
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
#      # Listeners
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
#    healthcheck:
#      test: ["CMD-SHELL", "echo 'test-message' | kafka-console-producer.sh --broker-list localhost:9092 --topic health-check-topic && kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic health-check-topic --from-beginning --max-messages 1 | grep 'test-message'"]
#      start_period: 15s
#      interval: 5s
#      timeout: 10s
#      retries: 8

  backend:
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - ./configs/service.yaml
    ports:
      - "8080:8080"
      - "50051:50051"
    volumes:
      - ./configs:/etc/app:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
#      kafka:
#        condition: service_healthy
      minio:
        condition: service_healthy

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "nudopustimemail@pochta.com"
      PGADMIN_DEFAULT_PASSWORD: "pgadminpwd"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

volumes:
  pgdata:
  pgadmin-data:
#  kafka_data:
  minio_data: